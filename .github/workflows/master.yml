name: Main CI

on:
  push:
    branches: ["master", "ci"]

#   flake8:
#     name: flake8/lint
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - uses: actions/setup-python@v5
#         with:
#           python-version: "3.11"
#       - name: flake8 Lint
#         uses: py-actions/flake8@v2
#
#   bandit:
#     name: semgrep/sast
#     runs-on: ubuntu-latest
#     container:
#       image: returntocorp/semgrep
#     steps:
#       - uses: actions/checkout@v4
#       - run: semgrep scan --config "p/bandit" .
#
#   sonarcloud:
#     name: sonarcloud/sast
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#     - name: Analyze with SonarCloud
#       uses: sonarsource/sonarcloud-github-action@master
#       with:
#         args: >
#           -Dsonar.organization=superqualifiedresearches
#           -Dsonar.projectKey=superqualifiedresearches_task-trackers-synchronizer
#           -Dsonar.verbose=true
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#
#   unit-test:
#     name: pytest/test
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#     - uses: actions/setup-python@v5
#       with:
#         python-version: "3.11"
#     - name: Install dependencies
#       run: |
#         pip install poetry pytest
#         poetry install
#     - name: Run tests
#       run: poetry run pytest tests/*.py
#
#   mutation-unit-test:
#     name: mutmut/test
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#     - uses: actions/setup-python@v5
#       with:
#         python-version: "3.11"
#     - name: Install dependencies
#       run: |
#         pip install poetry pytest mutmut
#         poetry install
#     - name: Run tests
#       run: poetry run mutmut run --paths-to-mutate "app/" --tests-dir "tests/"
#
#   docker:
#     name: docker/image
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#     - name: Set up QEMU
#       uses: docker/setup-qemu-action@v3
#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v3
#     - name: Login to Docker Hub
#       uses: docker/login-action@v3
#       with:
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_TOKEN }}
#     - name: Build and push
#       uses: docker/build-push-action@v5
#       with:
#         push: true
#         tags: superqualifiedresearches/task-trackers-synchronizer:latest
#
#   trivy:
#     name: trivy/image
#     runs-on: ubuntu-latest
#     needs: docker
#     steps:
#     - uses: actions/checkout@v4
#     - name: Run Trivy vulnerability scanner
#       uses: aquasecurity/trivy-action@master
#       with:
#         image-ref: 'docker.io/superqualifiedresearches/task-trackers-synchronizer:latest'
#         format: 'table'
#         exit-code: '1'
#         ignore-unfixed: true
#         vuln-type: 'os,library'
#         severity: 'CRITICAL'


jobs:
  flake8:
    name: flake8/lint
    runs-on: ubuntu-latest
    steps:
      - run: echo 0
    # steps:
    #   - uses: actions/checkout@v4
    #   - uses: actions/setup-python@v5
    #     with:
    #       python-version: "3.11"
    #   - name: flake8 Lint
    #     uses: py-actions/flake8@v2

  bandit:
    name: semgrep/sast
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    steps:
      - run: echo 0
      # - uses: actions/checkout@v4
      # - run: semgrep scan --config "p/bandit" .

  sonarcloud:
    name: sonarcloud/sast
    runs-on: ubuntu-latest
    steps:
      - run: echo 0

  unit-test:
    name: pytest/test
    runs-on: ubuntu-latest
    steps:
      - run: echo 0

  mutation-unit-test:
    name: mutmut/test
    runs-on: ubuntu-latest
    steps:
      - run: echo 0
    # - uses: actions/checkout@v4
    # - uses: actions/setup-python@v5
    #   with:
    #     python-version: "3.11"
    # - name: Install dependencies
    #   run: |
    #     pip install poetry pytest mutmut
    #     poetry install
    # - name: Run tests
    #   run: poetry run mutmut run --paths-to-mutate "app/" --tests-dir "tests/"

  integration-test:
    name: pytest/test
    runs-on: ubuntu-latest
    steps:
      - run: echo 0

  e2e-test:
    name: pytest/test
    runs-on: ubuntu-latest
    steps:
      - run: echo 0



  docker:
    name: docker/image
    runs-on: ubuntu-latest
    steps:
      - run: echo 0 

  trivy:
    name: trivy/image
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - run: echo 0
