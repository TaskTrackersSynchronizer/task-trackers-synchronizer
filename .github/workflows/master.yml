name: Main CI

on:
  push:
    branches: ["master", "dev", "fix_ci"]

jobs:
  coverage_gate:
    name: coverage/gate
    runs-on: ubuntu-latest
    after: [flake8, bandit, semgrep, sonarcloud, unit-test, mutation-test]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: '1.7.1'
    - name: Install dependencies
      run: poetry install
    - name: Run tests with coverage gate
      run:  poetry run pytest --cov=. tests/ --cov-report=json --cov-fail-under=80
    - name: Upload coverage report

  flake8:
    name: flake8/lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: flake8 Lint
        uses: py-actions/flake8@v2

  semgrep:
    name: semgrep/sast
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    steps:
      - uses: actions/checkout@v4
      - run: semgrep scan --config "p/bandit" .

  bandit:
    name: bandit/sast
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Setup environment
      uses: abatilo/actions-poetry@v3
    - name: Install dependencies
      run:  poetry install
    - name: Run Bandit
      run:  poetry run bandit -r app/

  sonarcloud:
    name: sonarcloud/sast
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Analyze with SonarCloud
      uses: sonarsource/sonarcloud-github-action@master
      with:
        args: >
          -Dsonar.organization=superqualifiedresearches
          -Dsonar.projectKey=superqualifiedresearches_task-trackers-synchronizer
          -Dsonar.verbose=true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  unit-test:
    name: pytest/unit-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: '1.7.1'
    - name: Install dependencies
      run: poetry install
    - name: Run tests
      run: poetry run pytest -m unit tests/*.py

  mutation-test:
    name: mutmut/test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: '1.7.1'
    - name: Install dependencies
      run: poetry install
    - name: Run tests
      run: poetry run mutmut run --paths-to-mutate "app/core/" --runner "pytest -m unit tests/"

  docker:
    name: docker/image
    runs-on: ubuntu-latest
    needs: [flake8, bandit, semgrep, sonarcloud, unit-test, mutation-test] # do not build if tests fail
    steps:
    - uses: actions/checkout@v4
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: superqualifiedresearches/task-trackers-synchronizer:latest

  trivy:
    name: trivy/image
    runs-on: ubuntu-latest
    needs: docker
    steps:
    - uses: actions/checkout@v4
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'docker.io/superqualifiedresearches/task-trackers-synchronizer:latest'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL'
