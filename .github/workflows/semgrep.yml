name: Test CI

on:
  push:
    branches: ["master", "ci"]

jobs:
  semgrep:
    name: semgrep/sast
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    steps:
      - uses: actions/checkout@v4
      - run: semgrep scan .

  sonarcloud:
    name: sonarcloud/sast
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Analyze with SonarCloud
      uses: sonarsource/sonarcloud-github-action@master
      with:
        projectBaseDir: app
        args: >
          -Dsonar.organization=superqualifiedresearches
          -Dsonar.projectKey=task-trackers-synchronizer
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.sources=lib/
          -Dsonar.test.exclusions=tests/**
          -Dsonar.tests=tests/
          -Dsonar.verbose=true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  unit-test:
    name: pytest/test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        pip install poetry pytest

    - name: Run tests
      run: poetry run pytest tests/*.py

  mutation-unit-test:
    name: mutmut/test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        pip install poetry pytest mutmut

    - name: Run tests
      run: mutmut run --paths-to-mutate "app/" --tests-dir "tests/"

  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: superqualifiedresearches/task-trackers-synchronizer:latest

  trivy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'docker.io/superqualifiedresearches/task-trackers-synchronizer:latest'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'